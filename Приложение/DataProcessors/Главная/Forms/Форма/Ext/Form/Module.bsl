

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьОтчетыРейтинг(); 
	АктуальностьДанных = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	ЗаполнитьОтчетыРейтинг();
КонецПроцедуры

#Область Рейтинг

&НаКлиенте
Процедура Рейтинг(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ПерваяСтраница;  
	ЗаполнитьОтчетыРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтчетыРейтинг()
	ЗаполнитьТоп();	
	ЗаполнитьТопГрупп();
КонецПроцедуры

&Насервере
Процедура ЗаполнитьТопГрупп() 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРейтингаОстатки.Студент.Владелец КАК Группа,
	|	СУММА(ОстаткиРейтингаОстатки.РейтингОстаток) КАК Рейтинг
	|ИЗ
	|	РегистрНакопления.ОстаткиРейтинга.Остатки КАК ОстаткиРейтингаОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРейтингаОстатки.Студент.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рейтинг УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = РезультатЗапроса.Выгрузить();   
	Место = 1;    
	ТабЗнач = Новый ТаблицаЗначений; 
	ТабЗнач.Колонки.Добавить("Место");
	ТабЗнач.Колонки.Добавить("Группа");
	ТабЗнач.Колонки.Добавить("ОбщийРейтингГруппы");
	
	Для каждого Строка Из Таблица Цикл  
		Если Место<11 Тогда
			
			СтрокаТЗ = ТабЗнач.Добавить();
			СтрокаТЗ.Место = Строка(Место);
			СтрокаТЗ.Группа =   Строка.Группа;
			СтрокаТЗ.ОбщийРейтингГруппы = Строка.Рейтинг;
			Место = Место+1;
			
		КонецЕсли;
		
	КонецЦикла;  
	ТопГрупп.Загрузить(ТабЗнач);
КонецПроцедуры

&Насервере
Процедура ЗаполнитьТоп()
	Перем Место;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРейтингаОстатки.Студент КАК Студент,
	|	ОстаткиРейтингаОстатки.РейтингОстаток КАК РейтингОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиРейтинга.Остатки КАК ОстаткиРейтингаОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	РейтингОстаток УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = РезультатЗапроса.Выгрузить();   
	Место = 1;    
	ТабЗнач = Новый ТаблицаЗначений; 
	ТабЗнач.Колонки.Добавить("МестоВТопе");
	ТабЗнач.Колонки.Добавить("Студент");
	ТабЗнач.Колонки.Добавить("Рейтинг");
	
	Для каждого Строка Из Таблица Цикл  
		Если Место<11 Тогда
			
			СтрокаТЗ = ТабЗнач.Добавить();
			СтрокаТЗ.МестоВТопе = Строка(Место);
			СтрокаТЗ.Студент =   Строка.Студент;
			СтрокаТЗ.Рейтинг = Строка.РейтингОстаток;
			Место = Место+1;
			
		КонецЕсли;
		
	КонецЦикла;  
	Топ10.Загрузить(ТабЗнач);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ЗаполнитьОтчетыРейтинг();
	АктуальностьДанных = ТекущаяДата();
КонецПроцедуры    


#КонецОбласти


#Область Достижения  

&НаКлиенте
Процедура Достижения(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ВтораяСтраница;   
	АктуальностьДанных = ТекущаяДата(); 
	ЗаполнитьОтчетыДостижения();
КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьДанныеДостижения(Команда)
	ЗаполнитьОтчетыДостижения();
	АктуальностьДанных = ТекущаяДата();
КонецПроцедуры    

&НаКлиенте
Процедура ЗаполнитьОтчетыДостижения()       
	ДиаграммаРедкостиДостижений(); 
КонецПроцедуры

&НаСервере
Процедура ДиаграммаРедкостиДостижений()
	
	РедкостьДостижений.Очистить();
	РедкостьДостижений.АвтоТранспонирование = ЛОЖЬ;
	РедкостьДостижений.Обновление = ЛОЖЬ;
	РедкостьДостижений.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолученныеДостижения.Достижение.Код КАК Достижение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПолученныеДостижения.Студент) КАК Студенты
	|ИЗ
	|	РегистрСведений.ПолученныеДостижения КАК ПолученныеДостижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолученныеДостижения.Достижение.Код
	|ИТОГИ
	|	СУММА(Студенты)
	|ПО
	|	Достижение";
	
	РезультатЗапроса = Запрос.Выполнить();   	
	Диаграмма = ЭтаФорма.РедкостьДостижений;  
	Диаграмма.ИсточникДанных = РезультатЗапроса; 
	РедкостьДостижений.АвтоТранспонирование = Истина;
	РедкостьДостижений.Обновление = Истина;
	
КонецПроцедуры


Функция ПолучитьДанныеДляДиаграммыДостижений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолученныеДостижения.Достижение КАК Достижение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПолученныеДостижения.Студент) КАК Студент
	|ИЗ
	|	РегистрСведений.ПолученныеДостижения КАК ПолученныеДостижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолученныеДостижения.Достижение";
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	
	ПрНомерЗаписи = 0;
	СтрутураДанных = Новый Структура;
	
	Для каждого ТекСтрока Из ТаблицаЗначений Цикл
		
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("Достижение",ТекСтрока.Достижение);
		СтруктураСтроки.Вставить("Студент",ТекСтрока.Студент);
		СтруктураСтроки.Вставить("Запись" + Строка(ПрНомерЗаписи),СтруктураСтроки);
		ПрНомерЗаписи = ПрНомерЗаписи +1;
	КонецЦикла;
	Возврат СтрутураДанных;
КонецФункции // ()


#КонецОбласти


#Область Телеграм

&НаКлиенте
Процедура Telegram(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ТретьяСтраница;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьБота(Команда)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПроцедура",5);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПроцедура() 
	
	Telegram_Сервер.ПрочитатьСообщенияПользователя();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРассылку(Команда)
	ОтправитьРассылкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьРассылкуНаСервере()
	ТекстСообщения = ЭтотОбъект.ГрупповаяРассылка;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Telegram_Пользователи.IDПользователя КАК IDПользователя
	|ИЗ
	|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеПользователю(Команда)
	ОтправитьСообщениеПользователюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеПользователюНаСервере() 
	ТекстСообщения = ЭтотОбъект.СообщениеДляПользователя;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Telegram_Пользователи.IDПользователя КАК IDПользователя
		|ИЗ
		|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Студенты КАК Студенты
		|		ПО Telegram_Пользователи.Телефон = Студенты.Телефон
		|ГДЕ
		|	Студенты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Студент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеГруппе(Команда)
	ОтправитьСообщениеГруппеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеГруппеНаСервере()
	ТекстСообщения = ЭтотОбъект.СообщениеДляГруппы; 
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Студенты.Владелец КАК Владелец,
		|	Telegram_Пользователи.IDПользователя КАК IDПользователя
		|ИЗ
		|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Студенты КАК Студенты
		|		ПО Telegram_Пользователи.Телефон = Студенты.Телефон
		|ГДЕ
		|	Студенты.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Группа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;
	
	
КонецПроцедуры



#КонецОбласти




